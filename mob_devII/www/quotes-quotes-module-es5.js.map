{"version":3,"sources":["src/app/pages/quotes/quotes.page.html","src/app/pages/quotes/quotes-routing.module.ts","src/app/pages/quotes/quotes.module.ts","src/app/pages/quotes/quotes.page.scss","src/app/pages/quotes/quotes.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Quotes</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\t<ion-searchbar  disabled=\\\"false\\\" color=\\\"white\\\" (ionInput)=\\\"getItems($event)\\\"></ion-searchbar>\\n<ion-list>\\n  <ion-item *ngFor=\\\"let item of items\\\"> {{ item }}</ion-item>\\n</ion-list>\\n\\t<img src=\\\"https://skullsproject.files.wordpress.com/2014/02/breaking-bad-movie-wallpaper-background.png\\\" width=\\\"500\\\">\\n\\t<ion-list>\\n\\t\\t<ion-button ion-button full (click)=\\\"goToDeaths()\\\" ion-button color=\\\"secondary\\\" ><strong>Switch to Deaths</strong></ion-button>\\n\\t\\t<ion-button ion-button full (click)=\\\"goToCharacters()\\\" ion-button color=\\\"secondary\\\" ><strong> Go back to Characters</strong></ion-button>\\n\\t\\t<ion-item ion-button full (click)=\\\"toggleInfiniteScroll()\\\"></ion-item>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async\\\" (click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t{{ quote.quote }}\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\nimport { NavController } from '@ionic/angular';\n@Component({\n    selector: 'app-quotes',\n    templateUrl: './quotes.page.html',\n    styleUrls: ['./quotes.page.scss'],\n})\nexport class QuotesPage implements OnInit {\n\n    quotes: Observable<any>;\n    items: string[];\n\n    constructor(private navController: NavController, private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        this.quotes = this.api.getQuotes();\n        this.quotes.subscribe(data => {\n            console.log('my data', data);\n        });\n    }\n  constructor2() {\n    this.initializeItems();\n  }\n  initializeItems() {\n    this.items = [\n      'I am not in danger,Skyler.I am the danger!',\n      'Stay out of my territory',\n      'IFT',\n      'Say my name',\n      'I watched Jane die.I was there.And I watched her die.I wathched her overdose and choque to death'\n    ];\n  }\n   getItems(ev: any) {\n    // Reset items back to all of the items\n    this.initializeItems();\n\n    // set val to the value of the searchbar\n    const val = ev.target.value;\n\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.items = this.items.filter((item) => {\n        return (item.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      })\n    }\n  }\n    openDetails(quote) {\n        let quoteId = quote.quote_id;\n        this.router.navigateByUrl(`/tabs/quotes/${quoteId}`);\n    }\n    goToDeaths() {\n        this.navController.navigateRoot(`/tabs/deaths`)\n    }\n    goToCharacters() {\n        this.navController.navigateRoot(`/tabs/characters`)\n    }\n}"],"sourceRoot":"webpack:///","file":"quotes-quotes-module-es5.js"}