{"version":3,"sources":["./src/app/pages/quotes/quotes.page.html","./src/app/pages/quotes/quotes-routing.module.ts","./src/app/pages/quotes/quotes.module.ts","./src/app/pages/quotes/quotes.page.scss","./src/app/pages/quotes/quotes.page.ts"],"names":[],"mappings":"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","file":"quotes-quotes-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Quotes</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\t<ion-searchbar  disabled=\\\"false\\\" color=\\\"white\\\" (ionInput)=\\\"getItems($event)\\\"></ion-searchbar>\\n<ion-list>\\n  <ion-item *ngFor=\\\"let item of items\\\"> {{ item }}</ion-item>\\n</ion-list>\\n\\t<img src=\\\"https://skullsproject.files.wordpress.com/2014/02/breaking-bad-movie-wallpaper-background.png\\\" width=\\\"500\\\">\\n\\t<ion-list>\\n\\t\\t<ion-button ion-button full (click)=\\\"goToDeaths()\\\" ion-button color=\\\"secondary\\\" ><strong>Switch to Deaths</strong></ion-button>\\n\\t\\t<ion-button ion-button full (click)=\\\"goToCharacters()\\\" ion-button color=\\\"secondary\\\" ><strong> Go back to Characters</strong></ion-button>\\n\\t\\t<ion-item ion-button full (click)=\\\"toggleInfiniteScroll()\\\"></ion-item>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async\\\" (click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t{{ quote.quote }}\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\nimport { NavController } from '@ionic/angular';\n@Component({\n    selector: 'app-quotes',\n    templateUrl: './quotes.page.html',\n    styleUrls: ['./quotes.page.scss'],\n})\nexport class QuotesPage implements OnInit {\n\n    quotes: Observable<any>;\n    items: string[];\n\n    constructor(private navController: NavController, private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        this.quotes = this.api.getQuotes();\n        this.quotes.subscribe(data => {\n            console.log('my data', data);\n        });\n    }\n  constructor2() {\n    this.initializeItems();\n  }\n  initializeItems() {\n    this.items = [\n      'I am not in danger,Skyler.I am the danger!',\n      'Stay out of my territory',\n      'IFT',\n      'Say my name',\n      'I watched Jane die.I was there.And I watched her die.I wathched her overdose and choque to death'\n    ];\n  }\n   getItems(ev: any) {\n    // Reset items back to all of the items\n    this.initializeItems();\n\n    // set val to the value of the searchbar\n    const val = ev.target.value;\n\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.items = this.items.filter((item) => {\n        return (item.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      })\n    }\n  }\n    openDetails(quote) {\n        let quoteId = quote.quote_id;\n        this.router.navigateByUrl(`/tabs/quotes/${quoteId}`);\n    }\n    goToDeaths() {\n        this.navController.navigateRoot(`/tabs/deaths`)\n    }\n    goToCharacters() {\n        this.navController.navigateRoot(`/tabs/characters`)\n    }\n}"],"sourceRoot":"webpack:///"}